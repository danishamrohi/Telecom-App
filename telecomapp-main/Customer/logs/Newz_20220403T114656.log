2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@5908e6d6
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@5908e6d6
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5908e6d6
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@51af8049
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@40016ce1
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@506aa618
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@76a1146d
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@76a1146d
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@76a1146d
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@e4ca109
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@e4ca109
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@e4ca109
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@677cc4e8
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@677cc4e8
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677cc4e8
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@3a3ad8e7
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@3a3ad8e7
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3a3ad8e7
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@48c5698
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@48c5698
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@48c5698
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@340c5fb6
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@340c5fb6
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@340c5fb6
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@11148dc2
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@11148dc2
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@11148dc2
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40f1aa95
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40f1aa95
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@67eeb310
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@67eeb310
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@456aa471
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@456aa471
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5c25d0d1
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2321e482
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@49190ed6
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@49190ed6
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@2342f1ff
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2342f1ff
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@701d2b59
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@701d2b59
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6e9a10cd
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6e9a10cd
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@49889154
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@49889154
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3df77dfa
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3df77dfa
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@44864536
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@44864536
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@d1c5cf2
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@d1c5cf2
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6903ed0e
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6903ed0e
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@6133e20b
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@6133e20b
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@2a7ebe07
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a7ebe07
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@3095d401
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3095d401
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3095d401
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14b5752f
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@6d7b2319
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d7b2319
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d7b2319
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e24592e
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@2fc7fa6e
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@30cafd13
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30cafd13
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@34f23816
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@34f23816
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0c45f4
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0c45f4
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@3335afcf
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3335afcf
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a899811
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a899811
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4e2cdc51
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@2c16677c
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@2c16677c
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@2c16677c
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@75e0a54c
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@75e0a54c
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@75e0a54c
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration row_version -> org.hibernate.type.RowVersionType@734a149a
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@4d20616a
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@1bfa5a13
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@1bfa5a13
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@1bfa5a13
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7d522180
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7d522180
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7d522180
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@3321291a
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@9c0d0bd
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@7910f355
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7910f355
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6cd45b6c
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@754de353
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@754de353
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@2e3252
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2e3252
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@602298b
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@d49e8c6
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@3dfe92ef
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@6d8b7ea9
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d8b7ea9
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3c3e363
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16c5b50a
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4f8659d0
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@278fe428
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3b4bd341
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d4cc7
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d28cdcd
2022-04-03 11:47:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@255ed8e4
2022-04-03 11:47:00 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@33430fc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45424c0]
2022-04-03 11:47:01 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@33430fc] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3be46d9c]
2022-04-03 11:47:01 [main] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3be46d9c] for TypeConfiguration
2022-04-03 11:47:02 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-04-03 11:47:04 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-04-03 11:47:05 [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-03 11:47:05 [main] WARN  c.netflix.discovery.DiscoveryClient -
				Using default backup registry implementation which does not do anything.
2022-04-03 11:47:05 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-03 11:47:05 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_CUSTOMERSERVICE/CA-L8VMW8G3.groupinfra.com:CustomerService:9094 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-04-03 11:47:05 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-04-03 11:47:06 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3be46d9c] for TypeConfiguration
2022-04-03 11:47:06 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@106591ca] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3be46d9c]
2022-04-03 11:47:06 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-03 11:47:06 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_CUSTOMERSERVICE/CA-L8VMW8G3.groupinfra.com:CustomerService:9094 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-04-03 11:47:06 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-04-03 11:47:06 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CUSTOMERSERVICE/CA-L8VMW8G3.groupinfra.com:CustomerService:9094": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-03 11:47:06 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_CUSTOMERSERVICE/CA-L8VMW8G3.groupinfra.com:CustomerService:9094 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:833)
