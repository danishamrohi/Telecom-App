2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@7afbf2a0
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@7afbf2a0
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7afbf2a0
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@376af784
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@203765b2
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@4b6b5352
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@6ef1c3f7
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@6ef1c3f7
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6ef1c3f7
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@15c16f19
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@15c16f19
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@15c16f19
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@4c6bba7d
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@4c6bba7d
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c6bba7d
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@6a6d1ff3
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@6a6d1ff3
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6a6d1ff3
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@17884d
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@17884d
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@17884d
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@322b09da
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@322b09da
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@322b09da
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@3be80ece
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@3be80ece
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3be80ece
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c72189f
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c72189f
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76af51d6
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76af51d6
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@69e2fe3b
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@69e2fe3b
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@22c8ee48
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@467ef400
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@5d717f19
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d717f19
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@3303e89e
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3303e89e
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@1999149e
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1999149e
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6ea66c33
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6ea66c33
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5c33008f
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5c33008f
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@721fc2e3
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@721fc2e3
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@455f4483
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@455f4483
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7e0986c9
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7e0986c9
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e154848
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e154848
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@30ffb2a6
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@30ffb2a6
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@6e93b0e7
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6e93b0e7
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@2037f12b
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2037f12b
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2037f12b
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b94703b
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@acb5508
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@acb5508
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@acb5508
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f0a4e30
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7f8c48f3
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@1d226f27
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d226f27
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@6736f40f
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6736f40f
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@45571cfc
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@45571cfc
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@699e0bf0
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@699e0bf0
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a51ae7c
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a51ae7c
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2969a9a6
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@27d73d22
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@27d73d22
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@27d73d22
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@40f9f60d
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@40f9f60d
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@40f9f60d
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration row_version -> org.hibernate.type.RowVersionType@6ce9771c
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@6ad6ae45
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@1b1e1f02
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@1b1e1f02
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@1b1e1f02
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ff03361
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ff03361
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ff03361
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@3dc46f24
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@176333ee
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@34ab26a
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@34ab26a
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a5b7d7e
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@ee2ae9a
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ee2ae9a
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@77cddc0c
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77cddc0c
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1fb6b8fb
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2712e8f4
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@2b9b17ce
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@5a39e554
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a39e554
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16c5b50a
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f8659d0
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@278fe428
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b4bd341
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d4cc7
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7d28cdcd
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@255ed8e4
2022-04-03 11:50:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@406ad6d5
2022-04-03 11:50:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45424c0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@22ae32ba]
2022-04-03 11:50:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45424c0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@41d877bb]
2022-04-03 11:50:22 [main] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@41d877bb] for TypeConfiguration
2022-04-03 11:50:23 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-04-03 11:50:24 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-04-03 11:50:25 [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-03 11:50:25 [main] WARN  c.netflix.discovery.DiscoveryClient -
				Using default backup registry implementation which does not do anything.
2022-04-03 11:50:25 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-03 11:50:25 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_CUSTOMERSERVICE/CA-L8VMW8G3.groupinfra.com:CustomerService:9094 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-04-03 11:50:25 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-04-03 11:50:26 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@41d877bb] for TypeConfiguration
2022-04-03 11:50:26 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4fc41256] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@41d877bb]
2022-04-03 11:50:26 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-03 11:50:26 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_CUSTOMERSERVICE/CA-L8VMW8G3.groupinfra.com:CustomerService:9094 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-04-03 11:50:26 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-04-03 11:50:29 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CUSTOMERSERVICE/CA-L8VMW8G3.groupinfra.com:CustomerService:9094": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-03 11:50:29 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_CUSTOMERSERVICE/CA-L8VMW8G3.groupinfra.com:CustomerService:9094 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:833)
