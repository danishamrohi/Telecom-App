2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@3220c28
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@3220c28
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3220c28
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@e706aa
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@6906be0f
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@62ab5e63
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@4c41a177
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@4c41a177
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c41a177
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4491eaeb
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4491eaeb
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4491eaeb
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@38e7860c
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@38e7860c
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38e7860c
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@38e46765
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@38e46765
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@38e46765
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@35ceec81
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@35ceec81
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@35ceec81
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@37c87fcc
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@37c87fcc
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37c87fcc
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@70ee1963
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@70ee1963
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@70ee1963
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@718f3088
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@718f3088
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17df689e
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17df689e
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@846b47
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@846b47
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e8bccfb
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@50785f86
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@4392362c
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@4392362c
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@3cad24ae
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3cad24ae
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@75e4fe3c
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@75e4fe3c
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6b7c4734
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6b7c4734
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@31f5b923
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@31f5b923
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2acb1264
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2acb1264
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f45dfec
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f45dfec
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7a730479
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7a730479
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e9e0c6
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e9e0c6
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@7884f722
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@7884f722
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@73dbe25
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@73dbe25
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@2dc3ece8
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2dc3ece8
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2dc3ece8
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77f03916
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@4ac19bc6
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ac19bc6
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ac19bc6
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@538e74fc
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@356fa0d1
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@7ee2423
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7ee2423
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@1fb71788
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1fb71788
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ee258
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ee258
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@40ac0a56
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@40ac0a56
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7d1cdeb1
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7d1cdeb1
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@56c6d515
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@4fafd27e
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@4fafd27e
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@4fafd27e
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ff542a3
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ff542a3
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ff542a3
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration row_version -> org.hibernate.type.RowVersionType@1d9af731
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@43756cb
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@75d539b9
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@75d539b9
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@75d539b9
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ed691fd
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ed691fd
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ed691fd
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@c190cfc
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@6cde0c69
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@92fd091
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@92fd091
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57fce8b
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@5daad59a
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5daad59a
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@1dd44289
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1dd44289
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a543e09
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5e7cd0df
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@70f5f59d
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@248b2b61
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@248b2b61
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4ca5cb99
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7853363c
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6282f1eb
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@120d6cbf
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@70169464
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1115be8c
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@64ed18ec
2022-03-25 19:11:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1dfcf85a
2022-03-25 19:11:50 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11ce9319] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@780c0]
2022-03-25 19:11:50 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11ce9319] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61c145cb]
2022-03-25 19:11:50 [main] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@61c145cb] for TypeConfiguration
2022-03-25 19:11:51 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-03-25 19:11:57 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-03-25 19:11:58 [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-03-25 19:11:58 [main] WARN  c.netflix.discovery.DiscoveryClient -
				Using default backup registry implementation which does not do anything.
2022-03-25 19:11:58 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/ADMINSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-03-25 19:11:58 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_ADMINSERVICE/CA-L2JBWFG3.groupinfra.com:AdminService:9092 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-03-25 19:11:58 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-03-25 19:11:58 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver -
				Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unrecognized token 'Json': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false'); nested exception is com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'Json': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 6]]
2022-03-25 19:11:58 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver -
				Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unrecognized token 'Json': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false'); nested exception is com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'Json': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 6]]
2022-03-25 19:11:58 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@61c145cb] for TypeConfiguration
2022-03-25 19:11:58 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7791b2a9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@61c145cb]
2022-03-25 19:11:58 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/ADMINSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-03-25 19:11:58 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_ADMINSERVICE/CA-L2JBWFG3.groupinfra.com:AdminService:9092 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-03-25 19:11:58 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-03-25 19:11:58 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ADMINSERVICE/CA-L2JBWFG3.groupinfra.com:AdminService:9092": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-03-25 19:11:58 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_ADMINSERVICE/CA-L2JBWFG3.groupinfra.com:AdminService:9092 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:833)
