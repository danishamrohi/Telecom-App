2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@4db46344
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@4db46344
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4db46344
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43756cb
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e5364a3
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@20f63ddc
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@311d28f5
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@311d28f5
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@311d28f5
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@6f4d2294
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@6f4d2294
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6f4d2294
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@35fb3209
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@35fb3209
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35fb3209
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@77204651
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@77204651
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77204651
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@7fb44737
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@7fb44737
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@7fb44737
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@2619cb76
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@2619cb76
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2619cb76
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@43fe2008
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@43fe2008
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43fe2008
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@900649e
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@900649e
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5599dc60
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5599dc60
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@43b172e3
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@43b172e3
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1cb849b2
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@57b711b6
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@248b2b61
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@248b2b61
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@120d6cbf
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@120d6cbf
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@69f69078
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69f69078
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71316cd7
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71316cd7
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4a944af9
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4a944af9
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@432a6a69
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@432a6a69
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a1cb94
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a1cb94
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@156ff70f
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@156ff70f
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f08d676
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f08d676
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@7a30e30b
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a30e30b
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@5a583720
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a583720
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@fb5d334
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@fb5d334
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@fb5d334
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d664323
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@4407b042
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4407b042
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4407b042
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77a9ac36
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@38848217
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@2e1291a4
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e1291a4
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@299eca90
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@299eca90
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@13374ca6
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13374ca6
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@6ca33187
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ca33187
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a14de0
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a14de0
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@430aae8e
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@75f32817
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@75f32817
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@75f32817
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7f70e244
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7f70e244
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7f70e244
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration row_version -> org.hibernate.type.RowVersionType@1b485c8b
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@2248d140
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@1bb4c431
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@1bb4c431
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@1bb4c431
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@54687fd0
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@54687fd0
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@54687fd0
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@7a3a49e5
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@16f4a3c0
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@356f20b7
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@356f20b7
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6d6f6ca9
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@25dcf1b6
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@25dcf1b6
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@3ec7eb5
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3ec7eb5
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6ad112de
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44485db
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@66314fee
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@f5ae29e
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f5ae29e
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a2f401a
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6bdedbbd
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@47b961e2
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@d2cb2d0
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2d230cff
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@30bd39d5
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c87e851
2022-04-06 02:28:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@54556723
2022-04-06 02:28:19 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@31204303] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@369fb99a]
2022-04-06 02:28:19 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@31204303] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@16c9e378]
2022-04-06 02:28:19 [main] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@16c9e378] for TypeConfiguration
2022-04-06 02:28:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-04-06 02:28:25 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-04-06 02:28:30 [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-06 02:28:30 [main] WARN  c.netflix.discovery.DiscoveryClient -
				Using default backup registry implementation which does not do anything.
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@4db46344
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@4db46344
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4db46344
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43756cb
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e5364a3
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@20f63ddc
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@311d28f5
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@311d28f5
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@311d28f5
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@6f4d2294
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@6f4d2294
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6f4d2294
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@35fb3209
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@35fb3209
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35fb3209
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@77204651
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@77204651
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77204651
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@7fb44737
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@7fb44737
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@7fb44737
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@2619cb76
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@2619cb76
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2619cb76
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@43fe2008
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@43fe2008
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43fe2008
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@900649e
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@900649e
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5599dc60
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5599dc60
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@43b172e3
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@43b172e3
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1cb849b2
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@57b711b6
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@248b2b61
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@248b2b61
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@120d6cbf
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@120d6cbf
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@69f69078
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69f69078
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71316cd7
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71316cd7
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4a944af9
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4a944af9
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@432a6a69
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@432a6a69
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a1cb94
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a1cb94
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@156ff70f
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@156ff70f
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f08d676
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f08d676
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@7a30e30b
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a30e30b
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@5a583720
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a583720
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@fb5d334
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@fb5d334
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@fb5d334
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d664323
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@4407b042
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4407b042
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4407b042
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77a9ac36
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@38848217
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@2e1291a4
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e1291a4
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@299eca90
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@299eca90
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@13374ca6
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13374ca6
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@6ca33187
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ca33187
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44a14de0
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44a14de0
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@430aae8e
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@75f32817
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@75f32817
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@75f32817
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7f70e244
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7f70e244
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7f70e244
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration row_version -> org.hibernate.type.RowVersionType@1b485c8b
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@2248d140
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@1bb4c431
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@1bb4c431
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@1bb4c431
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@54687fd0
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@54687fd0
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@54687fd0
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@7a3a49e5
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@16f4a3c0
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@356f20b7
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@356f20b7
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6d6f6ca9
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@25dcf1b6
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@25dcf1b6
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@3ec7eb5
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3ec7eb5
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6ad112de
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44485db
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@66314fee
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@f5ae29e
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f5ae29e
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f573b84
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3177190a
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67744663
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4d37a4d7
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3bca3dee
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@32fcccd4
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@77fec3b6
2022-04-06 02:28:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@71fd082
2022-04-06 02:28:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18ab86a2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6295cc30]
2022-04-06 02:28:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18ab86a2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4893d628]
2022-04-06 02:28:32 [main] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4893d628] for TypeConfiguration
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_0_, csr0_.details as details2_0_0_, csr0_.email as email3_0_0_, csr0_.is_admin as is_admin4_0_0_, csr0_.is_enabled as is_enabl5_0_0_, csr0_.name as name6_0_0_, csr0_.password as password7_0_0_, csr0_.phone_no as phone_no8_0_0_, csr0_.user_name as user_nam9_0_0_ from csr csr0_ where csr0_.csr_id=?
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [INTEGER] - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_0_] : [VARCHAR]) - []
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_0_] : [VARCHAR]) - [rob@rob.com]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_0_] : [BOOLEAN]) - [false]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_0_] : [VARCHAR]) - [Rob Smith]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_0_] : [VARCHAR]) - [rob]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_0_] : [BIGINT]) - [1234789560]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_0_] : [VARCHAR]) - [rob]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				update csr set details=?, email=?, is_admin=?, is_enabled=?, name=?, password=?, phone_no=?, user_name=? where csr_id=?
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [null]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [null]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [3] as [BOOLEAN] - [false]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [4] as [BOOLEAN] - [true]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [5] as [VARCHAR] - [Ainz]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [6] as [VARCHAR] - [pass]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [7] as [BIGINT] - [0]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [8] as [VARCHAR] - [Dan]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [9] as [INTEGER] - [1]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_, csr0_.details as details2_0_, csr0_.email as email3_0_, csr0_.is_admin as is_admin4_0_, csr0_.is_enabled as is_enabl5_0_, csr0_.name as name6_0_, csr0_.password as password7_0_, csr0_.phone_no as phone_no8_0_, csr0_.user_name as user_nam9_0_ from csr csr0_
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [2]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_] : [VARCHAR]) - [This is good CSR]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_] : [VARCHAR]) - [dan@yahoo.ca]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_] : [BOOLEAN]) - [false]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_] : [BIGINT]) - [87651235]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [10]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_] : [VARCHAR]) - [Good details]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_] : [VARCHAR]) - [admin@admin.com]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_] : [VARCHAR]) - [admin admin]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_] : [VARCHAR]) - [password]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_] : [BIGINT]) - [98765432]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_] : [VARCHAR]) - [admin]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_0_, csr0_.details as details2_0_0_, csr0_.email as email3_0_0_, csr0_.is_admin as is_admin4_0_0_, csr0_.is_enabled as is_enabl5_0_0_, csr0_.name as name6_0_0_, csr0_.password as password7_0_0_, csr0_.phone_no as phone_no8_0_0_, csr0_.user_name as user_nam9_0_0_ from csr csr0_ where csr0_.csr_id=?
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [INTEGER] - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_0_] : [VARCHAR]) - []
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_0_] : [VARCHAR]) - [rob@rob.com]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_0_] : [BOOLEAN]) - [false]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_0_] : [VARCHAR]) - [Rob Smith]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_0_] : [VARCHAR]) - [rob]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_0_] : [BIGINT]) - [1234789560]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_0_] : [VARCHAR]) - [rob]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				update csr set details=?, email=?, is_admin=?, is_enabled=?, name=?, password=?, phone_no=?, user_name=? where csr_id=?
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [null]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [null]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [3] as [BOOLEAN] - [false]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [4] as [BOOLEAN] - [true]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [5] as [VARCHAR] - [Ainz]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [6] as [VARCHAR] - [pass]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [7] as [BIGINT] - [0]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [8] as [VARCHAR] - [Dan]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [9] as [INTEGER] - [1]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_, csr0_.details as details2_0_, csr0_.email as email3_0_, csr0_.is_admin as is_admin4_0_, csr0_.is_enabled as is_enabl5_0_, csr0_.name as name6_0_, csr0_.password as password7_0_, csr0_.phone_no as phone_no8_0_, csr0_.user_name as user_nam9_0_ from csr csr0_
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [2]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_] : [VARCHAR]) - [This is good CSR]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_] : [VARCHAR]) - [dan@yahoo.ca]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_] : [BOOLEAN]) - [false]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_] : [BIGINT]) - [87651235]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [10]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_] : [VARCHAR]) - [Good details]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_] : [VARCHAR]) - [admin@admin.com]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_] : [VARCHAR]) - [admin admin]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_] : [VARCHAR]) - [password]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_] : [BIGINT]) - [98765432]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_] : [VARCHAR]) - [admin]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_, csr0_.details as details2_0_, csr0_.email as email3_0_, csr0_.is_admin as is_admin4_0_, csr0_.is_enabled as is_enabl5_0_, csr0_.name as name6_0_, csr0_.password as password7_0_, csr0_.phone_no as phone_no8_0_, csr0_.user_name as user_nam9_0_ from csr csr0_
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [2]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [10]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_, csr0_.details as details2_0_, csr0_.email as email3_0_, csr0_.is_admin as is_admin4_0_, csr0_.is_enabled as is_enabl5_0_, csr0_.name as name6_0_, csr0_.password as password7_0_, csr0_.phone_no as phone_no8_0_, csr0_.user_name as user_nam9_0_ from csr csr0_
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [2]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [10]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_0_, csr0_.details as details2_0_0_, csr0_.email as email3_0_0_, csr0_.is_admin as is_admin4_0_0_, csr0_.is_enabled as is_enabl5_0_0_, csr0_.name as name6_0_0_, csr0_.password as password7_0_0_, csr0_.phone_no as phone_no8_0_0_, csr0_.user_name as user_nam9_0_0_ from csr csr0_ where csr0_.csr_id=?
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [INTEGER] - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_0_] : [VARCHAR]) - []
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_0_] : [VARCHAR]) - [rob@rob.com]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_0_] : [BOOLEAN]) - [false]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_0_] : [VARCHAR]) - [Rob Smith]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_0_] : [VARCHAR]) - [rob]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_0_] : [BIGINT]) - [1234789560]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_0_] : [VARCHAR]) - [rob]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				delete from csr where csr_id=?
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [INTEGER] - [1]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_, csr0_.details as details2_0_, csr0_.email as email3_0_, csr0_.is_admin as is_admin4_0_, csr0_.is_enabled as is_enabl5_0_, csr0_.name as name6_0_, csr0_.password as password7_0_, csr0_.phone_no as phone_no8_0_, csr0_.user_name as user_nam9_0_ from csr csr0_
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [2]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_] : [VARCHAR]) - [This is good CSR]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_] : [VARCHAR]) - [dan@yahoo.ca]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_] : [BOOLEAN]) - [false]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_] : [BIGINT]) - [87651235]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [10]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_] : [VARCHAR]) - [Good details]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_] : [VARCHAR]) - [admin@admin.com]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_] : [VARCHAR]) - [admin admin]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_] : [VARCHAR]) - [password]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_] : [BIGINT]) - [98765432]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_] : [VARCHAR]) - [admin]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_0_, csr0_.details as details2_0_0_, csr0_.email as email3_0_0_, csr0_.is_admin as is_admin4_0_0_, csr0_.is_enabled as is_enabl5_0_0_, csr0_.name as name6_0_0_, csr0_.password as password7_0_0_, csr0_.phone_no as phone_no8_0_0_, csr0_.user_name as user_nam9_0_0_ from csr csr0_ where csr0_.csr_id=?
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [INTEGER] - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_0_] : [VARCHAR]) - []
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_0_] : [VARCHAR]) - [rob@rob.com]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_0_] : [BOOLEAN]) - [false]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_0_] : [VARCHAR]) - [Rob Smith]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_0_] : [VARCHAR]) - [rob]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_0_] : [BIGINT]) - [1234789560]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_0_] : [VARCHAR]) - [rob]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				update csr set details=?, email=?, is_admin=?, is_enabled=?, name=?, password=?, phone_no=?, user_name=? where csr_id=?
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [null]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [null]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [3] as [BOOLEAN] - [false]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [4] as [BOOLEAN] - [true]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [5] as [VARCHAR] - [Banana]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [6] as [VARCHAR] - [pass]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [7] as [BIGINT] - [0]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [8] as [VARCHAR] - [Dan]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [9] as [INTEGER] - [1]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_, csr0_.details as details2_0_, csr0_.email as email3_0_, csr0_.is_admin as is_admin4_0_, csr0_.is_enabled as is_enabl5_0_, csr0_.name as name6_0_, csr0_.password as password7_0_, csr0_.phone_no as phone_no8_0_, csr0_.user_name as user_nam9_0_ from csr csr0_
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [2]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_] : [VARCHAR]) - [This is good CSR]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_] : [VARCHAR]) - [dan@yahoo.ca]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_] : [BOOLEAN]) - [false]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_] : [BIGINT]) - [87651235]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [10]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_] : [VARCHAR]) - [Good details]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_] : [VARCHAR]) - [admin@admin.com]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_] : [VARCHAR]) - [admin admin]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_] : [VARCHAR]) - [password]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_] : [BIGINT]) - [98765432]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_] : [VARCHAR]) - [admin]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_0_, csr0_.details as details2_0_0_, csr0_.email as email3_0_0_, csr0_.is_admin as is_admin4_0_0_, csr0_.is_enabled as is_enabl5_0_0_, csr0_.name as name6_0_0_, csr0_.password as password7_0_0_, csr0_.phone_no as phone_no8_0_0_, csr0_.user_name as user_nam9_0_0_ from csr csr0_ where csr0_.csr_id=?
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [INTEGER] - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_0_] : [VARCHAR]) - []
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_0_] : [VARCHAR]) - [rob@rob.com]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_0_] : [BOOLEAN]) - [false]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_0_] : [VARCHAR]) - [Rob Smith]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_0_] : [VARCHAR]) - [rob]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_0_] : [BIGINT]) - [1234789560]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_0_] : [VARCHAR]) - [rob]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				update csr set details=?, email=?, is_admin=?, is_enabled=?, name=?, password=?, phone_no=?, user_name=? where csr_id=?
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [null]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [null]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [3] as [BOOLEAN] - [false]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [4] as [BOOLEAN] - [true]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [5] as [VARCHAR] - [Ainz]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [6] as [VARCHAR] - [pass]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [7] as [BIGINT] - [0]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [8] as [VARCHAR] - [Dan]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [9] as [INTEGER] - [1]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_, csr0_.details as details2_0_, csr0_.email as email3_0_, csr0_.is_admin as is_admin4_0_, csr0_.is_enabled as is_enabl5_0_, csr0_.name as name6_0_, csr0_.password as password7_0_, csr0_.phone_no as phone_no8_0_, csr0_.user_name as user_nam9_0_ from csr csr0_
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [2]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_] : [VARCHAR]) - [This is good CSR]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_] : [VARCHAR]) - [dan@yahoo.ca]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_] : [BOOLEAN]) - [false]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_] : [BIGINT]) - [87651235]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [10]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_] : [VARCHAR]) - [Good details]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_] : [VARCHAR]) - [admin@admin.com]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_] : [VARCHAR]) - [admin admin]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_] : [VARCHAR]) - [password]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_] : [BIGINT]) - [98765432]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_] : [VARCHAR]) - [admin]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_0_, csr0_.details as details2_0_0_, csr0_.email as email3_0_0_, csr0_.is_admin as is_admin4_0_0_, csr0_.is_enabled as is_enabl5_0_0_, csr0_.name as name6_0_0_, csr0_.password as password7_0_0_, csr0_.phone_no as phone_no8_0_0_, csr0_.user_name as user_nam9_0_0_ from csr csr0_ where csr0_.csr_id=?
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [INTEGER] - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_0_] : [VARCHAR]) - []
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_0_] : [VARCHAR]) - [rob@rob.com]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_0_] : [BOOLEAN]) - [false]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_0_] : [VARCHAR]) - [Rob Smith]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_0_] : [VARCHAR]) - [rob]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_0_] : [BIGINT]) - [1234789560]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_0_] : [VARCHAR]) - [rob]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				update csr set details=?, email=?, is_admin=?, is_enabled=?, name=?, password=?, phone_no=?, user_name=? where csr_id=?
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [null]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [null]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [3] as [BOOLEAN] - [false]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [4] as [BOOLEAN] - [true]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [5] as [VARCHAR] - [Ainz]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [6] as [VARCHAR] - [pass]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [7] as [BIGINT] - [0]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [8] as [VARCHAR] - [Dan]
2022-04-06 02:28:33 [main] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [9] as [INTEGER] - [1]
2022-04-06 02:28:33 [main] DEBUG org.hibernate.SQL -
				select csr0_.csr_id as csr_id1_0_, csr0_.details as details2_0_, csr0_.email as email3_0_, csr0_.is_admin as is_admin4_0_, csr0_.is_enabled as is_enabl5_0_, csr0_.name as name6_0_, csr0_.password as password7_0_, csr0_.phone_no as phone_no8_0_, csr0_.user_name as user_nam9_0_ from csr csr0_
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [1]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [2]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_] : [VARCHAR]) - [This is good CSR]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_] : [VARCHAR]) - [dan@yahoo.ca]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_] : [BOOLEAN]) - [false]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_] : [BIGINT]) - [87651235]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_] : [VARCHAR]) - [ainz]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([csr_id1_0_] : [INTEGER]) - [10]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([details2_0_] : [VARCHAR]) - [Good details]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email3_0_] : [VARCHAR]) - [admin@admin.com]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_admin4_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([is_enabl5_0_] : [BOOLEAN]) - [true]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name6_0_] : [VARCHAR]) - [admin admin]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password7_0_] : [VARCHAR]) - [password]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_no8_0_] : [BIGINT]) - [98765432]
2022-04-06 02:28:33 [main] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam9_0_] : [VARCHAR]) - [admin]
2022-04-06 02:28:34 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@16c9e378] for TypeConfiguration
2022-04-06 02:28:34 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@39d18d0c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@16c9e378]
2022-04-06 02:28:34 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/ADMINSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-06 02:28:34 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_ADMINSERVICE/host.docker.internal:AdminService:9092 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2022-04-06 02:28:34 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2022-04-06 02:28:38 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/ADMINSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-06 02:28:38 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_ADMINSERVICE/host.docker.internal:AdminService:9092 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2022-04-06 02:28:38 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2022-04-06 02:28:41 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/ADMINSERVICE/host.docker.internal:AdminService:9092": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-06 02:28:41 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_ADMINSERVICE/host.docker.internal:AdminService:9092 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
2022-04-06 02:28:41 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4893d628] for TypeConfiguration
2022-04-06 02:28:41 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@23cb3a37] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4893d628]
