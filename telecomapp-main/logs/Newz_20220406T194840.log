2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@3c16528d
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@3c16528d
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3c16528d
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@27bc1d44
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d2d8846
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@2dcd0e41
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@f2fb225
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@f2fb225
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@f2fb225
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@539316bb
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@539316bb
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@539316bb
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@52bba91a
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@52bba91a
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52bba91a
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1f7e52d1
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1f7e52d1
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f7e52d1
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@4aa22cc2
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@4aa22cc2
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@4aa22cc2
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@69bc9584
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@69bc9584
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@69bc9584
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@45984654
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@45984654
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@45984654
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@640c216b
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@640c216b
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3d40498a
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3d40498a
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@1de5cc88
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@1de5cc88
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3ef3f661
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@78479f2b
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@7b377a53
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b377a53
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@27358a19
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@27358a19
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@305b43ca
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@305b43ca
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5cd8d029
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5cd8d029
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@63e4484d
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@63e4484d
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@394a6d2b
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@394a6d2b
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@62735b13
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@62735b13
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@66a82a13
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@66a82a13
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76e6c070
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76e6c070
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@1c68d0db
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c68d0db
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@5fb7ab9c
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5fb7ab9c
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@74500e4f
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@74500e4f
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@74500e4f
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6704df84
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@78065fcd
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78065fcd
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78065fcd
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@22ae905f
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@72fb989b
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@17134190
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@17134190
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@919086
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@919086
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@19705650
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@19705650
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@6b9697ae
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b9697ae
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a6da47a
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a6da47a
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@44aa91e2
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@653a5967
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@653a5967
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@653a5967
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@23ea8830
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@23ea8830
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@23ea8830
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration row_version -> org.hibernate.type.RowVersionType@1a7163e3
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@2c2e3460
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@4416e18d
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@4416e18d
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@4416e18d
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5a3cf824
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5a3cf824
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5a3cf824
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@3c60c681
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@3c28181b
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@d70e9a
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d70e9a
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@61808ecd
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@3d4ecc67
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d4ecc67
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@5b322873
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5b322873
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@63de4fa
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cfd5cd2
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@2b2a4332
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@56da96b3
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@56da96b3
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e37fb82
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@59ec7020
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@23f60b7d
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2ba9f986
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4aa3fc9a
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@70f4f89e
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@634aa81e
2022-04-06 19:48:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74b1838
2022-04-06 19:48:44 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e29a81a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7b4b8199]
2022-04-06 19:48:44 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e29a81a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ca2be53]
2022-04-06 19:48:44 [main] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@ca2be53] for TypeConfiguration
2022-04-06 19:48:45 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-04-06 19:48:46 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-04-06 19:48:51 [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-06 19:48:51 [main] WARN  c.netflix.discovery.DiscoveryClient -
				Using default backup registry implementation which does not do anything.
2022-04-06 19:48:55 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-06 19:48:55 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_CUSTOMERSERVICE/host.docker.internal:CustomerService:9094 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2022-04-06 19:48:55 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2022-04-06 19:50:40 [http-nio-9094-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver -
				Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `int` from String "4444400000": Overflow: numeric value (4444400000) out of range of int (-2147483648 -2147483647); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `int` from String "4444400000": Overflow: numeric value (4444400000) out of range of int (-2147483648 -2147483647)<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 104] (through reference chain: com.cgi.customer.model.Customer["phoneNumber"])]
2022-04-06 19:50:50 [http-nio-9094-exec-3] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_, customer0_.email_id as email_id2_0_, customer0_.name as name3_0_, customer0_.password as password4_0_, customer0_.phone_number as phone_nu5_0_ from customer customer0_ where customer0_.user_name=? and customer0_.password=?
2022-04-06 19:50:50 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [lisa]
2022-04-06 19:50:50 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [password]
2022-04-06 19:50:50 [http-nio-9094-exec-3] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_0_, customer0_.email_id as email_id2_0_0_, customer0_.name as name3_0_0_, customer0_.password as password4_0_0_, customer0_.phone_number as phone_nu5_0_0_ from customer customer0_ where customer0_.user_name=?
2022-04-06 19:50:50 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [lisa]
2022-04-06 19:50:50 [http-nio-9094-exec-3] DEBUG org.hibernate.SQL -
				insert into customer (email_id, name, password, phone_number, user_name) values (?, ?, ?, ?, ?)
2022-04-06 19:50:50 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [lisa@gmail.com]
2022-04-06 19:50:50 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [Lisa Barber]
2022-04-06 19:50:50 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [3] as [VARCHAR] - [password]
2022-04-06 19:50:50 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [4] as [INTEGER] - [1111100000]
2022-04-06 19:50:50 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [5] as [VARCHAR] - [lisa]
2022-04-06 19:51:35 [http-nio-9094-exec-4] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_, customer0_.email_id as email_id2_0_, customer0_.name as name3_0_, customer0_.password as password4_0_, customer0_.phone_number as phone_nu5_0_ from customer customer0_ where customer0_.user_name=? and customer0_.password=?
2022-04-06 19:51:35 [http-nio-9094-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [lisa]
2022-04-06 19:51:35 [http-nio-9094-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [password]
2022-04-06 19:51:35 [http-nio-9094-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam1_0_] : [VARCHAR]) - [lisa]
2022-04-06 19:51:35 [http-nio-9094-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email_id2_0_] : [VARCHAR]) - [lisa@gmail.com]
2022-04-06 19:51:35 [http-nio-9094-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name3_0_] : [VARCHAR]) - [Lisa Barber]
2022-04-06 19:51:35 [http-nio-9094-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password4_0_] : [VARCHAR]) - [password]
2022-04-06 19:51:35 [http-nio-9094-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_nu5_0_] : [INTEGER]) - [1111100000]
2022-04-06 19:52:26 [http-nio-9094-exec-6] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_, customer0_.email_id as email_id2_0_, customer0_.name as name3_0_, customer0_.password as password4_0_, customer0_.phone_number as phone_nu5_0_ from customer customer0_ where customer0_.user_name=? and customer0_.password=?
2022-04-06 19:52:26 [http-nio-9094-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [laura]
2022-04-06 19:52:26 [http-nio-9094-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [password]
2022-04-06 19:52:26 [http-nio-9094-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam1_0_] : [VARCHAR]) - [laura]
2022-04-06 19:52:26 [http-nio-9094-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email_id2_0_] : [VARCHAR]) - [laura@yahoo.com]
2022-04-06 19:52:26 [http-nio-9094-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name3_0_] : [VARCHAR]) - [Laura]
2022-04-06 19:52:26 [http-nio-9094-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password4_0_] : [VARCHAR]) - [password]
2022-04-06 19:52:26 [http-nio-9094-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_nu5_0_] : [INTEGER]) - [1234567770]
2022-04-06 19:52:28 [http-nio-9094-exec-7] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_, customer0_.email_id as email_id2_0_, customer0_.name as name3_0_, customer0_.password as password4_0_, customer0_.phone_number as phone_nu5_0_ from customer customer0_ where customer0_.user_name=? and customer0_.password=?
2022-04-06 19:52:28 [http-nio-9094-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [laura]
2022-04-06 19:52:28 [http-nio-9094-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [password]
2022-04-06 19:52:28 [http-nio-9094-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam1_0_] : [VARCHAR]) - [laura]
2022-04-06 19:52:28 [http-nio-9094-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email_id2_0_] : [VARCHAR]) - [laura@yahoo.com]
2022-04-06 19:52:28 [http-nio-9094-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name3_0_] : [VARCHAR]) - [Laura]
2022-04-06 19:52:28 [http-nio-9094-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password4_0_] : [VARCHAR]) - [password]
2022-04-06 19:52:28 [http-nio-9094-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_nu5_0_] : [INTEGER]) - [1234567770]
2022-04-06 19:52:29 [http-nio-9094-exec-8] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_, customer0_.email_id as email_id2_0_, customer0_.name as name3_0_, customer0_.password as password4_0_, customer0_.phone_number as phone_nu5_0_ from customer customer0_ where customer0_.user_name=? and customer0_.password=?
2022-04-06 19:52:29 [http-nio-9094-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [laura]
2022-04-06 19:52:29 [http-nio-9094-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [password]
2022-04-06 19:52:29 [http-nio-9094-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam1_0_] : [VARCHAR]) - [laura]
2022-04-06 19:52:29 [http-nio-9094-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email_id2_0_] : [VARCHAR]) - [laura@yahoo.com]
2022-04-06 19:52:29 [http-nio-9094-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name3_0_] : [VARCHAR]) - [Laura]
2022-04-06 19:52:29 [http-nio-9094-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password4_0_] : [VARCHAR]) - [password]
2022-04-06 19:52:29 [http-nio-9094-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_nu5_0_] : [INTEGER]) - [1234567770]
2022-04-06 19:57:34 [http-nio-9094-exec-5] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_, customer0_.email_id as email_id2_0_, customer0_.name as name3_0_, customer0_.password as password4_0_, customer0_.phone_number as phone_nu5_0_ from customer customer0_ where customer0_.user_name=? and customer0_.password=?
2022-04-06 19:57:34 [http-nio-9094-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [laura]
2022-04-06 19:57:34 [http-nio-9094-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [password]
2022-04-06 19:57:34 [http-nio-9094-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam1_0_] : [VARCHAR]) - [laura]
2022-04-06 19:57:34 [http-nio-9094-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email_id2_0_] : [VARCHAR]) - [laura@yahoo.com]
2022-04-06 19:57:34 [http-nio-9094-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name3_0_] : [VARCHAR]) - [Laura]
2022-04-06 19:57:34 [http-nio-9094-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password4_0_] : [VARCHAR]) - [password]
2022-04-06 19:57:34 [http-nio-9094-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_nu5_0_] : [INTEGER]) - [1234567770]
2022-04-06 19:58:47 [http-nio-9094-exec-3] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_, customer0_.email_id as email_id2_0_, customer0_.name as name3_0_, customer0_.password as password4_0_, customer0_.phone_number as phone_nu5_0_ from customer customer0_ where customer0_.user_name=? and customer0_.password=?
2022-04-06 19:58:47 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [james]
2022-04-06 19:58:47 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [password]
2022-04-06 19:58:47 [http-nio-9094-exec-3] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_0_, customer0_.email_id as email_id2_0_0_, customer0_.name as name3_0_0_, customer0_.password as password4_0_0_, customer0_.phone_number as phone_nu5_0_0_ from customer customer0_ where customer0_.user_name=?
2022-04-06 19:58:47 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [james]
2022-04-06 19:58:47 [http-nio-9094-exec-3] DEBUG org.hibernate.SQL -
				insert into customer (email_id, name, password, phone_number, user_name) values (?, ?, ?, ?, ?)
2022-04-06 19:58:47 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [james@yahoo.com]
2022-04-06 19:58:47 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [James Anderson]
2022-04-06 19:58:47 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [3] as [VARCHAR] - [password]
2022-04-06 19:58:47 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [4] as [INTEGER] - [1234512345]
2022-04-06 19:58:47 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [5] as [VARCHAR] - [james]
2022-04-06 20:00:00 [http-nio-9094-exec-10] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_, customer0_.email_id as email_id2_0_, customer0_.name as name3_0_, customer0_.password as password4_0_, customer0_.phone_number as phone_nu5_0_ from customer customer0_ where customer0_.user_name=? and customer0_.password=?
2022-04-06 20:00:00 [http-nio-9094-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [james]
2022-04-06 20:00:00 [http-nio-9094-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [password]
2022-04-06 20:00:00 [http-nio-9094-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam1_0_] : [VARCHAR]) - [james]
2022-04-06 20:00:00 [http-nio-9094-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email_id2_0_] : [VARCHAR]) - [james@yahoo.com]
2022-04-06 20:00:00 [http-nio-9094-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name3_0_] : [VARCHAR]) - [James Anderson]
2022-04-06 20:00:00 [http-nio-9094-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password4_0_] : [VARCHAR]) - [password]
2022-04-06 20:00:00 [http-nio-9094-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_nu5_0_] : [INTEGER]) - [1234512345]
2022-04-06 20:00:01 [http-nio-9094-exec-7] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_0_, customer0_.email_id as email_id2_0_0_, customer0_.name as name3_0_0_, customer0_.password as password4_0_0_, customer0_.phone_number as phone_nu5_0_0_ from customer customer0_ where customer0_.user_name=?
2022-04-06 20:00:01 [http-nio-9094-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [james]
2022-04-06 20:00:01 [http-nio-9094-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email_id2_0_0_] : [VARCHAR]) - [james@yahoo.com]
2022-04-06 20:00:01 [http-nio-9094-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name3_0_0_] : [VARCHAR]) - [James Anderson]
2022-04-06 20:00:01 [http-nio-9094-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password4_0_0_] : [VARCHAR]) - [password]
2022-04-06 20:00:01 [http-nio-9094-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_nu5_0_0_] : [INTEGER]) - [1234512345]
2022-04-06 20:03:19 [http-nio-9094-exec-9] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_, customer0_.email_id as email_id2_0_, customer0_.name as name3_0_, customer0_.password as password4_0_, customer0_.phone_number as phone_nu5_0_ from customer customer0_ where customer0_.user_name=? and customer0_.password=?
2022-04-06 20:03:19 [http-nio-9094-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [james]
2022-04-06 20:03:19 [http-nio-9094-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [password]
2022-04-06 20:03:19 [http-nio-9094-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam1_0_] : [VARCHAR]) - [james]
2022-04-06 20:03:19 [http-nio-9094-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email_id2_0_] : [VARCHAR]) - [james@yahoo.com]
2022-04-06 20:03:19 [http-nio-9094-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name3_0_] : [VARCHAR]) - [James Anderson]
2022-04-06 20:03:19 [http-nio-9094-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password4_0_] : [VARCHAR]) - [password]
2022-04-06 20:03:19 [http-nio-9094-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_nu5_0_] : [INTEGER]) - [1234512345]
2022-04-06 20:03:27 [http-nio-9094-exec-5] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_, customer0_.email_id as email_id2_0_, customer0_.name as name3_0_, customer0_.password as password4_0_, customer0_.phone_number as phone_nu5_0_ from customer customer0_ where customer0_.user_name=? and customer0_.password=?
2022-04-06 20:03:27 [http-nio-9094-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [adam]
2022-04-06 20:03:27 [http-nio-9094-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [password]
2022-04-06 20:03:27 [http-nio-9094-exec-5] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_0_, customer0_.email_id as email_id2_0_0_, customer0_.name as name3_0_0_, customer0_.password as password4_0_0_, customer0_.phone_number as phone_nu5_0_0_ from customer customer0_ where customer0_.user_name=?
2022-04-06 20:03:27 [http-nio-9094-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [adam]
2022-04-06 20:03:27 [http-nio-9094-exec-5] DEBUG org.hibernate.SQL -
				insert into customer (email_id, name, password, phone_number, user_name) values (?, ?, ?, ?, ?)
2022-04-06 20:03:27 [http-nio-9094-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [adam@yahoo.com]
2022-04-06 20:03:27 [http-nio-9094-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [Adam Walker]
2022-04-06 20:03:27 [http-nio-9094-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [3] as [VARCHAR] - [password]
2022-04-06 20:03:27 [http-nio-9094-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [4] as [INTEGER] - [1234561234]
2022-04-06 20:03:27 [http-nio-9094-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [5] as [VARCHAR] - [adam]
2022-04-06 20:04:36 [http-nio-9094-exec-3] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_, customer0_.email_id as email_id2_0_, customer0_.name as name3_0_, customer0_.password as password4_0_, customer0_.phone_number as phone_nu5_0_ from customer customer0_ where customer0_.user_name=? and customer0_.password=?
2022-04-06 20:04:36 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [adam]
2022-04-06 20:04:36 [http-nio-9094-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [2] as [VARCHAR] - [password]
2022-04-06 20:04:36 [http-nio-9094-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([user_nam1_0_] : [VARCHAR]) - [adam]
2022-04-06 20:04:36 [http-nio-9094-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email_id2_0_] : [VARCHAR]) - [adam@yahoo.com]
2022-04-06 20:04:36 [http-nio-9094-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name3_0_] : [VARCHAR]) - [Adam Walker]
2022-04-06 20:04:36 [http-nio-9094-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password4_0_] : [VARCHAR]) - [password]
2022-04-06 20:04:36 [http-nio-9094-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_nu5_0_] : [INTEGER]) - [1234561234]
2022-04-06 20:04:36 [http-nio-9094-exec-4] DEBUG org.hibernate.SQL -
				select customer0_.user_name as user_nam1_0_0_, customer0_.email_id as email_id2_0_0_, customer0_.name as name3_0_0_, customer0_.password as password4_0_0_, customer0_.phone_number as phone_nu5_0_0_ from customer customer0_ where customer0_.user_name=?
2022-04-06 20:04:36 [http-nio-9094-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder -
				binding parameter [1] as [VARCHAR] - [adam]
2022-04-06 20:04:36 [http-nio-9094-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([email_id2_0_0_] : [VARCHAR]) - [adam@yahoo.com]
2022-04-06 20:04:36 [http-nio-9094-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([name3_0_0_] : [VARCHAR]) - [Adam Walker]
2022-04-06 20:04:36 [http-nio-9094-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([password4_0_0_] : [VARCHAR]) - [password]
2022-04-06 20:04:36 [http-nio-9094-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor -
				extracted value ([phone_nu5_0_0_] : [INTEGER]) - [1234561234]
2022-04-06 21:18:19 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@ca2be53] for TypeConfiguration
2022-04-06 21:18:19 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5d5317fe] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@ca2be53]
2022-04-06 21:18:26 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CUSTOMERSERVICE/host.docker.internal:CustomerService:9094": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-06 21:18:30 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CUSTOMERSERVICE/host.docker.internal:CustomerService:9094": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-06 21:18:30 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_CUSTOMERSERVICE/host.docker.internal:CustomerService:9094 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
