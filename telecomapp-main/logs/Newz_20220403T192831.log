2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@1b31af02
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@1b31af02
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1b31af02
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6060146b
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@7a55fb81
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@61911947
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@762a10b6
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@762a10b6
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@762a10b6
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@240a2619
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@240a2619
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@240a2619
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@3070f3e6
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@3070f3e6
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3070f3e6
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@4fc6e776
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@4fc6e776
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4fc6e776
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@32da97fd
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@32da97fd
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@32da97fd
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@365cef67
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@365cef67
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@365cef67
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@b7d2d51
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@b7d2d51
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@b7d2d51
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5d601832
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5d601832
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a96d639
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a96d639
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@1e120628
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@1e120628
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2d4fb0d8
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5b332439
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@45b7c97f
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@45b7c97f
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@4e5c8ef3
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4e5c8ef3
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@6e0d16a4
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6e0d16a4
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@54c11750
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@54c11750
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@799c8758
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@799c8758
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@582dcd35
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@582dcd35
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@638afcaa
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@638afcaa
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@64c25a62
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@64c25a62
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6a7a1a0d
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6a7a1a0d
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@4438938e
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@4438938e
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@474e34e4
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@474e34e4
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@4899799b
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4899799b
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4899799b
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7fc7152e
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@13aed42b
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13aed42b
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13aed42b
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@10e56da9
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@51d8f2f2
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@524f5ea5
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@524f5ea5
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@647fb583
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@647fb583
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@4d43a1b7
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4d43a1b7
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@75ad30c1
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75ad30c1
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@ad0bb4e
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@ad0bb4e
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7f642bf
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@11c7a0b4
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@11c7a0b4
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@11c7a0b4
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b9aeedb
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b9aeedb
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b9aeedb
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration row_version -> org.hibernate.type.RowVersionType@796c68bf
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5e69cf07
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@4e4f4092
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@4e4f4092
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@4e4f4092
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@70c491b8
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@70c491b8
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@70c491b8
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@28367da7
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@7a1371
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@6b3f4bd8
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b3f4bd8
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4fe8f2ae
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@4eeb14e0
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4eeb14e0
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@72a7aa4f
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@72a7aa4f
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7ad889be
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@18907af2
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@1152900
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@25218a4d
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@25218a4d
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@426710f0
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c5a91b4
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e37fb82
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@59ec7020
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@23f60b7d
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ba9f986
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4aa3fc9a
2022-04-03 19:28:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@70f4f89e
2022-04-03 19:28:36 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@156324b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@38a38ed4]
2022-04-03 19:28:36 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@156324b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@cf08c97]
2022-04-03 19:28:36 [main] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@cf08c97] for TypeConfiguration
2022-04-03 19:28:37 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration -
				spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-04-03 19:28:38 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger -
				Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2022-04-03 19:28:43 [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-03 19:28:43 [main] WARN  c.netflix.discovery.DiscoveryClient -
				Using default backup registry implementation which does not do anything.
2022-04-03 19:28:43 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext -
				Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 9094 is already in use
2022-04-03 19:28:43 [main] TRACE o.h.type.spi.TypeConfiguration$Scope -
				Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@cf08c97] for TypeConfiguration
2022-04-03 19:28:43 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope -
				Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@71b6edfb] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@cf08c97]
2022-04-03 19:28:47 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/CUSTOMERSERVICE": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-03 19:28:47 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_CUSTOMERSERVICE/host.docker.internal:CustomerService:9094 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2022-04-03 19:28:47 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator -
				There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2022-04-03 19:28:50 [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient -
				Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/CUSTOMERSERVICE/host.docker.internal:CustomerService:9094": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect
2022-04-03 19:28:50 [main] ERROR c.netflix.discovery.DiscoveryClient -
				DiscoveryClient_CUSTOMERSERVICE/host.docker.internal:CustomerService:9094 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:596)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:740)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:415)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1301)
	at com.cgi.customer.CustomerApplication.main(CustomerApplication.java:23)
2022-04-03 19:28:50 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter -
				

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 9094 was already in use.

Action:

Identify and stop the process that's listening on port 9094 or configure this application to listen on another port.

